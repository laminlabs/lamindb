[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "lamindb"
requires-python = ">=3.8"
authors = [{name = "Lamin Labs", email = "laminlabs@gmail.com"}]
readme = "README.md"
dynamic = ["version", "description"]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    # Lamin PINNED packages
    "lnschema_core==0.46.5",
    "lamindb_setup==0.51.2",
    "lamin_utils==0.10.4",
    # others
    "rapidfuzz",
    "pyarrow",
    "typing_extensions!=4.6.0",
    "python-dateutil",
    "anndata>=0.9.1,<=0.9.2",  # we're using anndata internals
    "fsspec",
    "pandas",
    "graphviz",
]

[project.urls]
Home = "https://github.com/laminlabs/lamindb"

[project.optional-dependencies]
bionty = [
    "lnschema_bionty==0.30.2",
]
postgres = ["psycopg2-binary"]
aws = [
    "botocore==1.29.76",  # for aiobotocore inside s3fs, to fix deps resolution
    "urllib3<2", # for botocore
    "boto3==1.26.76", # to avoid conflicts arising due to the pin on botocore
    "fsspec[s3]==2023.5.0"
]
gcp = [
    "fsspec[gs]==2023.5.0"
]
jupyter = [
    "nbproject==0.9.2"  # keep pinning
]
zarr = [
    "zarr>=2.16.0",
]
fcs = [
    "readfcs>=1.1.5",
]
erdiagram = [
    "erdiagram>=0.1.3",
]
dev = [
    # basic test
    "pre-commit",
    "nox",
    "laminci>=0.3",
    "pytest>=6.0",
    "coverage",
    "pytest-cov",
    # others
    "nbproject_test>=0.3.0",
    # biology
    "faker-biology",
]

[project.scripts]
lamin = "lamindb_setup.__main__:main"

[tool.black]
preview = true
