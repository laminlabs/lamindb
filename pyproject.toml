[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "lamindb"
requires-python = ">=3.8"
authors = [{name = "Lamin Labs", email = "open-source@lamin.ai"}]
readme = "README.md"
dynamic = ["version", "description"]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    # Lamin PINNED packages
    "lnschema_core==0.58.1",
    "lamindb_setup==0.61.4",
    "lamin_utils==0.12.0",
    "lamin_cli==0.3.0",
    # others
    "rapidfuzz",
    "pyarrow",
    "typing_extensions!=4.6.0",
    "python-dateutil",
    "anndata>=0.8.0,<=0.10.3",  # will upgrade to new anndata releases
    "fsspec",
    "pandas",
    "graphviz",
    "psycopg2-binary",
]

[project.urls]
Home = "https://github.com/laminlabs/lamindb"

[project.optional-dependencies]
bionty = [
    "lnschema_bionty==0.36.1",
]
aws = [
    "botocore==1.31.17",  # for aiobotocore inside s3fs, to fix deps resolution
    "urllib3<2", # for botocore
    "boto3==1.28.17", # to avoid conflicts arising due to the pin on botocore
    "aiobotocore==2.5.4",
    "fsspec[s3]==2023.9.0",
    "s3fs>=2023.9.0",  # very old versions of s3fs don't work
]
gcp = [
    "fsspec[gs]==2023.9.0"
]
jupyter = [
    "nbproject==0.9.2",  # keep pinning
    "nbstripout",
    "nbconvert",
]
zarr = [
    "zarr>=2.16.0",
]
fcs = [
    "readfcs>=1.1.7",
]
erdiagram = [
    "django-schema-graph",
]
dev = [
    # suppress warning
    "pandas<2",
    # basic test
    "pre-commit",
    "nox",
    "laminci>=0.3",
    "pytest>=6.0",
    "coverage",
    "pytest-cov",
    # others
    "nbproject_test>=0.3.0",
    # biology
    "faker-biology",
    # vault
    "lamin_vault",
]



[tool.ruff]
src = ["src"]
line-length = 88
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
    "TCH",  # Typing imports
    "NPY",  # Numpy specific rules
    "PTH"  # Use pathlib
]
ignore = [
    # Do not catch blind exception: `Exception`
    "BLE001",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public module
    "D100",
    # undocumented-public-class
    "D101",
    # Missing docstring in public method
    "D102",
    # Missing docstring in public function
    "D103",
    # Missing docstring in public package
    "D104",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # Missing docstring in public nested class
    "D106",
    # Missing docstring in __init__
    "D107",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # 1 blank line required after class docstring
    "D204",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    # We want docstrings to start immediately after the opening triple quote
    "D213",
    # Section underline is over-indented ("{name}")
    "D215",
    # First line should end with a period
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    # First word of the first line should be capitalized: {} -> {}
    "D403",
    # First word of the docstring should not be "This"
    "D404",
    # Section name should end with a newline ("{name}")
    "D406",
    # Missing dashed underline after section ("{name}")
    "D407",
    # Section underline should be in the line following the section's name ("{name}")
    "D408",
    # Section underline should match the length of its name ("{name}")
    "D409",
    # No blank lines allowed between a section header and its content ("{name}")
    "D412",
    # Missing blank line after last section ("{name}")
    "D413",
    # Imports unused
    "F401",
    # camcelcase imported as lowercase
    "N813",
    # module import not at top level of file
    "E402",
    # open()` should be replaced by `Path.open()
    "PTH123",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]
